
import 'package:flutter/material.dart';
import 'package:flutter_proj/core/app_theme/app_sizes.dart';
import 'package:flutter_proj/core/common_widget/common_bottom.dart';
import 'package:flutter_proj/features/products/presentation/controllers/products_controller.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';


class ProductList extends ConsumerWidget {
  const ProductList({super.key});

  @override
  Widget build(BuildContext context, WidgetRef ref) {
    // final productState = ref.watch(getProductsProvider);
    // print(productState);
    return Padding(
      padding: const EdgeInsets.all(12.0),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.stretch,
        children: [
          Text('Product of List'),
          AppSizes.gapH20,
          CommonBottom(func: (){}, label: 'Some Button',color:Colors.red),
          AppSizes.gapH20,
          CommonBottom(func: (){}, label: 'Click Button',color:Colors.blue),
          AppSizes.gapH20,
          CommonBottom(func: (){}, label: 'play Button',color:Colors.teal),
          AppSizes.gapH20,
          // _buildElevatedButton(
          //   func: (){
          //     print('call 1');
          //   },
          //   label: 'submit'
          // ),
          // AppSizes.gapH20,
          // _buildElevatedButton(
          //     func: (){
          //       print('call 2');
          //     },
          //     label: 'play'
          // ),

        ],
      ),
    ); 
    //   RefreshIndicator(
    //     onRefresh: () => ref.refresh(getProductsProvider.future),
    //     child: Center(
    //       child: productState.when(
    //           data: (data){
    //             return ListView.separated(
    //                 itemBuilder: (context,index){
    //                   return ListTile(
    //                     title: Text(data[index].title),
    //                     subtitle: Text(data[index].description),
    //                   );
    //                 },
    //                 separatorBuilder: (context,index) => Divider(),
    //                 itemCount: data.length,
    //             );
    //           },
    //           error: (err, stack) => Column(
    //             children: [
    //               Text('$err'),
    //               ElevatedButton(onPressed: (){
    //                 ref.invalidate(getProductsProvider);
    //               }, child: Text('Refresh'))
    //             ],
    //           ),
    //           loading: () => Center(child: CircularProgressIndicator(),)
    //       ),
    //     ),
    // );
  }

  ElevatedButton _buildElevatedButton({required VoidCallback func,required String label,required Color color}) {
    return ElevatedButton(
          style: ElevatedButton.styleFrom(
            backgroundColor: color,
            foregroundColor: Colors.white
          ),
            onPressed: func, child: Text(label),
        );
  }
}